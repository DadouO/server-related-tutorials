version: '3.7'
# docker-compose -f helloX.yml up

# Use w. docker-compose, with custom user, no replicas, working security recos

# Final state : OK

# 1. Added user: 1003:1003
#   KO > network problem (~probably because :80 is < 1024, eg. restricted)
#   Resolved
#     sysctls:
#       net.ipv4.ip_unprivileged_port_start: 0
#   KO > Can't access php-fpm logs /var/log/php-fpm.log

# > Create named volume
#   cf. server-related-tutorials\01-docker\04-my-tests\09-traefik-curated\06-prod-traefik-curated\README.md
# docker volume create test-hello-logs \
#    --label fr.masamune.client='masamune' \
#    --label fr.masamune.maintainer='masamune.code@gmail.com' \
#    --label fr.masamune.project='tutum/helloworld logs' \
#    --label fr.masamune.type='test'

# > Manage rights through tmp container
#     Edit volume's /home, which will be mounter in hello's /var/log
#     Only folder content is important here, not the location in the tmp container
#     Note: this works as the tmp containers is mounted as root (no --user 1003:1003 in args), allowing file creation & chown :)
# docker run \
#    --rm \
#    --mount \
#       source=test-hello-logs,target=/home \
#    --workdir /home \
#    alpine \
#    /bin/ash -c 'touch php-fpm.log && chown 1003:1003 php-fpm.log'

#     # Verification
#     docker run \
#        -it \
#        --rm \
#        --mount \
#           source=test-hello-logs,target=/home \
#        --workdir /home \
#        alpine \
#        /bin/ash
#     >> ls -la
#     /home # ls -la
#     total 8
#     drwxr-xr-x    2 root     root          4096 May 18 11:18 .
#     drwxr-xr-x    1 root     root          4096 May 18 11:18 ..
#     -rw-r--r--    1 1003     1003             0 May 18 11:18 php-fpm.log
#     >> exit
#
#     # Can also verify proper file mount & rights inside the container
#     docker exec -it tests_helloworld_1 /bin/ash
#     >> cd /var/log/
#     >> ls -la

## Volume now contains a file 'php-fpm.log' with proper rights

# > Link volume (service & volume)
#   Mount that file in hello's var/log/
# volumes:
#   - type: volume
#     read_only: false
#     source: test-hello-logs
#     target: /var/log/

# Same problem for nginx logs
#   can't open '/var/log/nginx/access.log': No such file or directory
#   could not open error log file: open() "/var/log/nginx/error.log"
# Same resolution, in the same volume (one volume for both /log/ as it's the same path)

# docker run \
#    --rm \
#    --mount \
#       source=test-hello-logs,target=/home \
#    --workdir /home \
#    alpine \
#    /bin/ash -c 'mkdir nginx && touch ./nginx/access.log && chown 1003:1003 ./nginx/access.log && touch ./nginx/error.log  && chown 1003:1003 ./nginx/error.log'

# Still KO, as nginx needs some tmp/folder available
#   mkdir() "/var/lib/nginx/tmp/client_body" failed (13: Permission denied)
#   Using the nginx dockerhub image recommandations, overloading the nginx.conf file to have /tmp/ files in /tmp, instead of /var/lib/tmp/
#     https://hub.docker.com/_/nginx > Running nginx as a non-root user
#   nginx.conf must be in an authorized folder, ~/home/docker_peon/nginx.conf
# Still KO
# OK / Verif configuration overload
#   docker exec -it tests_helloworld_1 /bin/ash
#   >> vi /etc/nginx/nginx.conf
#   >> exit

# Peut être que tutm/helloworld  fait déjà un overload de config et que nous l'ecrasons a nouveau
# WEP / Obligé, pour la conf php, duh, cf ./nginx-conf/*
# Créer un fichier de configuration mergé : custom user ET tutum phpfpm

# OKAYYYYYY !, and no need to give access to the /tmp/ folders
#   By default it's chowned to 1003:1003 :)



# KO / cap_drop ALL > KO, even with cap_add: CAP_NET_BIND_SERVICE
# OK / Healthcheck
# KO / read_only: true > KO can't access to logs files
#   > Needs specific volumes for nginx / https://hub.docker.com/_/nginx > Running nginx in read-only mode
#   > And probably php-fpm too
# OK / security_opt > even if not pertinent w. docker stack

services:
  helloworld:
    # cap_drop:
    #   - ALL
    # cpu_shares: 1024
    healthcheck:
      test: 'stat /www/index.php || exit 1'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 0s
    image: tutum/hello-world:latest
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'curated service helloworld'
      fr.masamune.type: 'test'
    # Debug with docker-compose up
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    # --memory-reservation="128m"
    # --memory="256m"
    # --memory-swap -1
    networks:
      # Connect to traefik dedicated overlay network, allow reverse proxy
      - core-traefik-public
    # --pids-limit 200
    # Optionnal / Specify a FREE external port
    ports:
      - "80:80"
      # - "15000:80"
      # - "15000-15500:80"
    # read_only: true
    security_opt:
      - no-new-privileges:true
      - apparmor=docker-default
      - seccomp=/etc/docker/seccomp-profiles/default-docker-profile.json
    # Can't use a specific user for nginx on port 80 as it requires unprivileged ports
    #   /!\ sysctl param does not exist in ansible docker_swarm_service
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    # docker_peon unpriviledged namespaced user
    user: 1003:1003
    # Mount a prepared volume with existing log files (php-fpm.log, /nginx/access.log, /nginx/error.log) with proper rights (1003:1003)
    volumes:
      - type: volume
        read_only: false
        source: test-hello-logs
        target: /var/log/
      - '/home/singed_the_docker_peon_9f3eqk4s9/tests/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'

networks:
  core-traefik-public:
    # Connect to an existing network
    external: true

volumes:
  test-hello-logs:
    # Use the existing volume, do not recreate one with a prefix
    external: true